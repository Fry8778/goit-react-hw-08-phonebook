"use strict";(self.webpackChunkgoit_react_hw_08_phonebook=self.webpackChunkgoit_react_hw_08_phonebook||[]).push([[518],{7867:function(n,e,t){t.d(e,{Z:function(){return p}});var r=t(885),u=t(2791),a=t(9434),o=t(4685),i=t(1897),c="form_label__AmhRz",s="form_input__bh4-N",l="form_form__hlmC8",f=t(184),p=function(){var n=(0,u.useState)(""),e=(0,r.Z)(n,2),t=e[0],p=e[1],m=(0,u.useState)(""),d=(0,r.Z)(m,2),h=d[0],v=d[1],y=(0,a.v9)(i.dP),b=(0,a.I0)(),g=function(n){var e=n.target;"name"===e.name&&p(e.value),"number"===e.name&&v(e.value)};return(0,f.jsxs)("form",{onSubmit:function(n){n.preventDefault(),y.find((function(n){return n.name.toLowerCase()===t.toLowerCase()}))?alert("'Error' ".concat(t," is already in contacts")):(b((0,o.el)({name:t,number:h})),p(""),v(""))},className:l,children:[(0,f.jsxs)("label",{className:c,children:["Name",(0,f.jsx)("input",{className:s,type:"text",name:"name",value:t,onChange:g,pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0})]}),(0,f.jsxs)("label",{className:c,children:["Number",(0,f.jsx)("input",{className:s,type:"tel",name:"number",value:h,onChange:g,pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0})]}),(0,f.jsx)("button",{type:"submit",children:"Add contact"})]})}},1327:function(n,e,t){t.r(e),t.d(e,{default:function(){return l}});var r=t(2791),u=t(9434),a=t(4685),o=t(7867),i=t(1897),c=t(184),s=function(){var n=(0,u.v9)(i.Nq),e=(0,u.I0)();return(0,r.useEffect)((function(){e((0,a.K2)())}),[]),(0,c.jsx)("ul",{className:o.Z.contact,children:n.map((function(n){return(0,c.jsxs)("li",{className:o.Z.item,children:[(0,c.jsxs)("p",{className:o.Z.conParagraph,children:[n.name,": ",(0,c.jsx)("span",{children:n.number})]}),(0,c.jsx)("button",{className:o.Z.btn,type:"button",onClick:function(){return e((0,a.tY)(n.id))},children:"Delete"})]},n.id)}))})},l=function(){return(0,c.jsx)(s,{})}},1897:function(n,e,t){t.d(e,{Nq:function(){return f},Mv:function(){return l},dP:function(){return s}});var r="NOT_FOUND";var u=function(n,e){return n===e};function a(n,e){var t="object"===typeof e?e:{equalityCheck:e},a=t.equalityCheck,o=void 0===a?u:a,i=t.maxSize,c=void 0===i?1:i,s=t.resultEqualityCheck,l=function(n){return function(e,t){if(null===e||null===t||e.length!==t.length)return!1;for(var r=e.length,u=0;u<r;u++)if(!n(e[u],t[u]))return!1;return!0}}(o),f=1===c?function(n){var e;return{get:function(t){return e&&n(e.key,t)?e.value:r},put:function(n,t){e={key:n,value:t}},getEntries:function(){return e?[e]:[]},clear:function(){e=void 0}}}(l):function(n,e){var t=[];function u(n){var u=t.findIndex((function(t){return e(n,t.key)}));if(u>-1){var a=t[u];return u>0&&(t.splice(u,1),t.unshift(a)),a.value}return r}return{get:u,put:function(e,a){u(e)===r&&(t.unshift({key:e,value:a}),t.length>n&&t.pop())},getEntries:function(){return t},clear:function(){t=[]}}}(c,l);function p(){var e=f.get(arguments);if(e===r){if(e=n.apply(null,arguments),s){var t=f.getEntries(),u=t.find((function(n){return s(n.value,e)}));u&&(e=u.value)}f.put(arguments,e)}return e}return p.clearCache=function(){return f.clear()},p}function o(n){var e=Array.isArray(n[0])?n[0]:n;if(!e.every((function(n){return"function"===typeof n}))){var t=e.map((function(n){return"function"===typeof n?"function "+(n.name||"unnamed")+"()":typeof n})).join(", ");throw new Error("createSelector expects all input-selectors to be functions, but received the following types: ["+t+"]")}return e}function i(n){for(var e=arguments.length,t=new Array(e>1?e-1:0),r=1;r<e;r++)t[r-1]=arguments[r];var u=function(){for(var e=arguments.length,r=new Array(e),u=0;u<e;u++)r[u]=arguments[u];var a,i=0,c={memoizeOptions:void 0},s=r.pop();if("object"===typeof s&&(c=s,s=r.pop()),"function"!==typeof s)throw new Error("createSelector expects an output function after the inputs, but received: ["+typeof s+"]");var l=c,f=l.memoizeOptions,p=void 0===f?t:f,m=Array.isArray(p)?p:[p],d=o(r),h=n.apply(void 0,[function(){return i++,s.apply(null,arguments)}].concat(m)),v=n((function(){for(var n=[],e=d.length,t=0;t<e;t++)n.push(d[t].apply(null,arguments));return a=h.apply(null,n)}));return Object.assign(v,{resultFunc:s,memoizedResultFunc:h,dependencies:d,lastResult:function(){return a},recomputations:function(){return i},resetRecomputations:function(){return i=0}}),v};return u}var c=i(a),s=function(n){return n.contacts.items},l=function(n){return n.contacts.filter},f=c([s,l],(function(n,e){return n.filter((function(n){return n.name.toLowerCase().includes(e.toLocaleLowerCase())}))}))}}]);
//# sourceMappingURL=ContactsPage.5bb797c1.chunk.js.map